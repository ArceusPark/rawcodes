local WINDOW_TITLE = 'Change skin';
local WINDOW_ICON = ui.Icons.Road;

-- Настройки цветовой схемы
local colors = {
    background = rgbm(1, 1, 1, 1),     -- белый фон
    button = rgbm(1, 0, 0, 1),         -- красные кнопки
    buttonHovered = rgbm(0.8, 0, 0, 1),-- темно-красные при наведении
    buttonText = rgbm(0, 0, 0, 1),     -- черный текст на кнопках
    text = rgbm(0, 0, 0, 1),           -- черный текст
    border = rgbm(0, 0, 0, 1),         -- черная рамка
    tooltipBackground = rgbm(0, 0, 0, 0.9) -- черный фон для подсказок
}

-- Применяем закругление и цветовую схему для элементов интерфейса
ui.pushStyleVar(ui.StyleVar.FrameRounding, 10) -- Закругляем элементы интерфейса
ui.pushStyleColor(ui.StyleColor.Button, colors.button)
ui.pushStyleColor(ui.StyleColor.ButtonHovered, colors.buttonHovered)
ui.pushStyleColor(ui.StyleColor.ButtonText, colors.buttonText)
ui.pushStyleColor(ui.StyleColor.Border, colors.border)
ui.pushStyleColor(ui.StyleColor.WindowBg, colors.background)
ui.pushStyleColor(ui.StyleColor.Text, colors.text)

_local = {
    car = car,
}
_local.carDir = ac.getFolder(ac.FolderID.ContentCars) ..'/'.. ac.getCarID(_local.car.index)
_local.defaultSkin = ac.getCarSkinID(0) -- Сохраняем самый первый скин
_local.currentSkin = _local.defaultSkin
_local.car_skins = {}

io.scanDir(_local.carDir ..'/skins', '*', function (fileName)
    local skin = {name=fileName, files={}}

    io.scanDir(_local.carDir ..'/skins/'.. fileName, '*', function (fileName, fileAttributes)
        table.insert(skin.files, {name=fileName, fileAttributes=fileAttributes})
    end)

    table.insert(_local.car_skins, skin)
end)

local syncCarSkin = ac.OnlineEvent(
{ -- 175 bytes max message length
    skin = ac.StructItem.string(100),
    oldSkin = ac.StructItem.string(0),
},
function (sender, data)
    if sender == nil then return end
    applySkin(data.skin, sender.index, data.oldSkin)
end)

local function getCarSkinFiles(carName, skinName)
    return io.scanDir(ac.getFolder(ac.FolderID.ContentCars) ..'/'.. carName ..'/skins/'.. skinName, '*')
end

local function getCarSkinFilesToReset(carName, skinName)
    local carSkinFiles = getCarSkinFiles(carName, skinName)
    for i=1, #carSkinFiles do
        for j=1,#SKIN_FILES_TO_RESET do
            if (carSkinFiles[i]:lower():find(SKIN_FILES_TO_RESET[j])) then
                return carSkinFiles[i]
            end
        end
    end
end

function applySkin(skinName, carIndex, oldSkin)
    local car = ac.getCar(carIndex)
    if car == nil then return end
    local carName = ac.getCarID(carIndex)
    local carNode = ac.findNodes('carRoot:'..car.index)

    -- Сброс старого скина перед применением нового
    if oldSkin and oldSkin ~= "" then
        local oldCarSkinFiles = getCarSkinFilesToReset(carName, oldSkin)
        ac.debug('oldCarSkinFiles', oldCarSkinFiles)
        if oldCarSkinFiles then
            carNode:applySkin({[oldCarSkinFiles] = texture_path}) -- Возвращаем старую текстуру на место
        end
    end

    -- Сбрасываем все текущие текстуры
    carNode:resetSkin()

    -- Применяем новый скин
    local carSkinFiles = getCarSkinFiles(carName, skinName)
    ac.debug('carSkinFiles', #carSkinFiles)
    if #carSkinFiles > 0 then
        local theSkin = {}
        for i = 1, #carSkinFiles do
            theSkin[carSkinFiles[i]] = _local.carDir ..'/skins/'.. skinName ..'/'.. carSkinFiles[i]
        end
        carNode:applySkin(theSkin) -- Применяем новый скин
    else
        ac.debug('No skin files found for', skinName)
    end
end

-- Функция для сброса скина на самый первый
function resetSkin()
    if _local.currentSkin ~= _local.defaultSkin then
        applySkin(_local.defaultSkin, 0, _local.currentSkin)
        _local.currentSkin = _local.defaultSkin
    end
end

local function windowUI()
    -- Кнопка сброса скина
    if ui.button("Reset", vec2(60, 30)) then
        resetSkin()
    end

    -- Перебираем и отображаем доступные скины
    for k, skin in ipairs(_local.car_skins) do
        if ui.selectable(skin.name, false, ui.SelectableFlags.AllowDoubleClick) then
            if (skin.name ~= _local.currentSkin) then
                syncCarSkin({
                    skin = skin.name,
                    oldSkin = _local.currentSkin
                }, true)
                _local.currentSkin = skin.name
            end
        end
        if (ui.itemHovered()) then
            ui.tooltip(vec2(5, 5), function ()
                ui.image(_local.carDir ..'/skins/'.. skin.name ..'/preview.jpg', vec2(256, 144.03))
            end)
        end
    end
end

local function onWindowUIClose(okClicked)
end

-- Применяем настройки цветовой схемы и закругления
ui.registerOnlineExtra(WINDOW_ICON, WINDOW_TITLE, nil, windowUI, onWindowUIClose, nil, nil, vec2(400, 400))

-- Откатываем изменения в стиле после отрисовки окна
ui.popStyleColor(6)
ui.popStyleVar()
